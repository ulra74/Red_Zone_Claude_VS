# Generated by Django 5.2.4 on 2025-07-16 10:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_pregunta_options_alter_respuesta_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamenTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del examen', max_length=200)),
                ('tipo', models.CharField(choices=[('normal', 'Normal'), ('examen', 'Examen')], default='normal', help_text='Tipo de examen', max_length=20)),
                ('numero_preguntas', models.PositiveIntegerField(help_text='Número de preguntas del examen (mínimo 10)')),
                ('tiempo_por_pregunta', models.PositiveIntegerField(help_text='Tiempo máximo por pregunta en segundos (0 = sin límite)')),
                ('tipo_aclaracion', models.CharField(choices=[('inmediata', 'Inmediata (después de cada pregunta)'), ('final', 'Al final del examen')], default='inmediata', help_text='Cuándo mostrar las aclaraciones', max_length=20)),
                ('fecha_inicio', models.DateTimeField(help_text='Fecha y hora de inicio del examen')),
                ('fecha_fin', models.DateTimeField(blank=True, help_text='Fecha y hora de finalización del examen', null=True)),
                ('completado', models.BooleanField(default=False, help_text='Si el examen ha sido completado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('apartados_seleccionados', models.ManyToManyField(blank=True, help_text='Apartados específicos seleccionados (opcional)', related_name='examenes_test_apartado', to='core.apartado')),
                ('estudiante', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='examenes_test', to=settings.AUTH_USER_MODEL)),
                ('temas_seleccionados', models.ManyToManyField(help_text='Temas seleccionados para el examen', related_name='examenes_test_tema', to='core.tema')),
            ],
            options={
                'verbose_name': 'Examen Test',
                'verbose_name_plural': 'Exámenes Test',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamenTestResultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntuacion_total', models.PositiveIntegerField(help_text='Puntuación total obtenida')),
                ('puntuacion_maxima', models.PositiveIntegerField(help_text='Puntuación máxima posible')),
                ('porcentaje_acierto', models.DecimalField(decimal_places=2, help_text='Porcentaje de acierto', max_digits=5)),
                ('tiempo_total_segundos', models.PositiveIntegerField(help_text='Tiempo total empleado en segundos')),
                ('preguntas_correctas', models.PositiveIntegerField(help_text='Número de preguntas correctas')),
                ('preguntas_incorrectas', models.PositiveIntegerField(help_text='Número de preguntas incorrectas')),
                ('preguntas_sin_responder', models.PositiveIntegerField(default=0, help_text='Número de preguntas sin responder (por timeout)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('examen', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resultado', to='core.examentest')),
            ],
            options={
                'verbose_name': 'Resultado de Examen Test',
                'verbose_name_plural': 'Resultados de Exámenes Test',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RespuestaExamenTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_correcta', models.BooleanField(default=False, help_text='Si la respuesta seleccionada es correcta')),
                ('tiempo_empleado_segundos', models.PositiveIntegerField(help_text='Tiempo empleado en responder esta pregunta en segundos')),
                ('orden_pregunta', models.PositiveIntegerField(help_text='Orden en que apareció la pregunta en el examen')),
                ('timeout', models.BooleanField(default=False, help_text='Si la pregunta se respondió por timeout')),
                ('respondida_at', models.DateTimeField(auto_now_add=True)),
                ('examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_examen', to='core.examentest')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respuestas_en_examenes_test', to='core.pregunta')),
                ('respuesta_seleccionada', models.ForeignKey(blank=True, help_text='Respuesta seleccionada por el estudiante', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seleccionada_en_examenes_test', to='core.respuesta')),
            ],
            options={
                'verbose_name': 'Respuesta de Examen Test',
                'verbose_name_plural': 'Respuestas de Exámenes Test',
                'ordering': ['orden_pregunta'],
                'unique_together': {('examen', 'pregunta')},
            },
        ),
    ]
