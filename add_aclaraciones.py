#!/usr/bin/env python3
"""
Script para a√±adir aclaraciones a las preguntas existentes
"""

import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'red_zone_academy.settings')
django.setup()

from core.models import Pregunta, Respuesta

def main():
    print("üîÑ A√±adiendo aclaraciones a preguntas existentes...")
    
    # Obtener todas las preguntas
    preguntas = Pregunta.objects.all()
    total_preguntas = preguntas.count()
    
    if total_preguntas == 0:
        print("‚ùå No hay preguntas en la base de datos")
        return
    
    print(f"üìä Se encontraron {total_preguntas} preguntas")
    
    # Contador de preguntas actualizadas
    actualizadas = 0
    
    # Aclaraciones por tema
    aclaraciones_por_tema = {
        'normativa': [
            "La Ley 17/2015 del Sistema Nacional de Protecci√≥n Civil se aprob√≥ el 9 de julio de 2015, estableciendo el marco normativo para la protecci√≥n civil en Espa√±a.",
            "El principio de servicio al inter√©s general es fundamental en la actuaci√≥n p√∫blica, priorizando el bien com√∫n sobre intereses particulares.",
            "La normativa de protecci√≥n civil establece los mecanismos de coordinaci√≥n entre las diferentes administraciones p√∫blicas.",
            "Los empleados p√∫blicos tienen deberes espec√≠ficos establecidos en el Estatuto B√°sico del Empleado P√∫blico.",
            "La legislaci√≥n en materia de emergencias ha evolucionado para adaptarse a los nuevos riesgos y amenazas."
        ],
        'extincion': [
            "El agua es el agente extintor m√°s utilizado debido a su capacidad de enfriamiento y disponibilidad.",
            "La espuma AFFF (Aqueous Film Forming Foam) es especialmente efectiva en fuegos de hidrocarburos.",
            "La selecci√≥n del agente extintor debe considerar el tipo de combustible y las condiciones del incendio.",
            "La aplicaci√≥n correcta del agua requiere conocer las t√©cnicas de ataque directo e indirecto.",
            "Los sistemas de extinci√≥n por espuma requieren equipos especializados y personal entrenado."
        ],
        'rescate': [
            "El trabajo en altura requiere equipos de protecci√≥n individual certificados y personal especializado.",
            "La seguridad del rescatista es prioritaria para evitar incrementar el n√∫mero de v√≠ctimas.",
            "Las t√©cnicas de rescate vehicular han evolucionado con los nuevos materiales de los veh√≠culos.",
            "El triaje es fundamental para optimizar los recursos en situaciones de m√∫ltiples v√≠ctimas.",
            "La coordinaci√≥n entre equipos es esencial en operaciones de rescate complejas."
        ]
    }
    
    # Explicaciones para respuestas
    explicaciones_respuesta = {
        'correcta': [
            "Esta es la respuesta correcta seg√∫n la normativa vigente.",
            "Respuesta acertada. Esta informaci√≥n se encuentra en el manual oficial.",
            "Correcto. Esta es la pr√°ctica recomendada por los protocolos.",
            "Exacto. Esta respuesta refleja el procedimiento est√°ndar.",
            "Muy bien. Esta es la opci√≥n que establece la legislaci√≥n."
        ],
        'incorrecta': [
            "Esta opci√≥n no es correcta seg√∫n la normativa actual.",
            "Respuesta incorrecta. Esta informaci√≥n no se ajusta a los protocolos.",
            "Esta alternativa no es la adecuada seg√∫n los procedimientos.",
            "Opci√≥n err√≥nea. No corresponde con la pr√°ctica recomendada.",
            "Esta respuesta no es v√°lida seg√∫n la reglamentaci√≥n."
        ]
    }
    
    for pregunta in preguntas:
        # Determinar tema basado en el apartado
        tema_key = 'normativa'  # Por defecto
        if 'extinc' in pregunta.apartado.nombre.lower():
            tema_key = 'extincion'
        elif 'rescate' in pregunta.apartado.nombre.lower():
            tema_key = 'rescate'
        
        # A√±adir aclaraci√≥n a la pregunta si no la tiene
        if not pregunta.texto_aclaratorio:
            index = (pregunta.id - 1) % len(aclaraciones_por_tema[tema_key])
            pregunta.texto_aclaratorio = aclaraciones_por_tema[tema_key][index]
            pregunta.save()
            actualizadas += 1
            print(f"‚úÖ Pregunta {pregunta.id}: Aclaraci√≥n a√±adida")
        
        # A√±adir explicaciones a las respuestas
        respuestas = pregunta.respuestas.all()
        for respuesta in respuestas:
            if not respuesta.explicacion:
                if respuesta.es_correcta:
                    index = (respuesta.id - 1) % len(explicaciones_respuesta['correcta'])
                    respuesta.explicacion = explicaciones_respuesta['correcta'][index]
                else:
                    index = (respuesta.id - 1) % len(explicaciones_respuesta['incorrecta'])
                    respuesta.explicacion = explicaciones_respuesta['incorrecta'][index]
                respuesta.save()
                print(f"  üìù Respuesta {respuesta.id}: Explicaci√≥n a√±adida")
    
    print(f"\nüéâ Proceso completado:")
    print(f"   üìö {actualizadas} preguntas actualizadas con aclaraciones")
    print(f"   üí° Todas las respuestas ahora tienen explicaciones")
    print(f"   üîÑ Total de preguntas procesadas: {total_preguntas}")

if __name__ == "__main__":
    main()